import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:shop_app/models/search_models.dart';// import 'package:shop_app/shared/components/componants.dart';import 'package:shop_app/shared/cubit/cubit.dart';import 'package:shop_app/shared/cubit/state.dart';class SearchScreen extends StatelessWidget {  var formKey = GlobalKey<FormState>();  var textController = TextEditingController();  @override  Widget build(BuildContext context) {    return BlocProvider(      create: (BuildContext context) => ShopCubit(),      child: BlocConsumer<ShopCubit, ShopStates>(        listener: (context, state) {},        builder: (context, state) {          return Scaffold(            appBar: AppBar(),            body: Padding(              padding: const EdgeInsets.all(15.0),              child: Column(                children: [                  TextFormField(                    onFieldSubmitted: (text) {                      ShopCubit.get(context).getSearch(text);                    },                    keyboardType: TextInputType.text,                    controller: textController,                    validator: (value) {                      if (value!.isEmpty) {                        return 'search must not be empty';                      }                    },                    decoration: InputDecoration(                      prefixIcon: Icon(                        Icons.search,                      ),                      labelText: 'Search',                      border: OutlineInputBorder(                        borderRadius: BorderRadius.circular(                          20.0,                        ),                      ),                    ),                  ),                  SizedBox(                    height: 10.0,                  ),                  if (state is ShopSearchLoadingState)                    LinearProgressIndicator(),                  SizedBox(                    height: 10.0,                  ),                  if (state is ShopSearchSuccessState)                    Expanded(                        child: ListView.separated(                      physics: BouncingScrollPhysics(),                      itemBuilder: (context, index) => searchBuilderItems(                        ShopCubit.get(context).searchModels!.data!.data[index],                        context,                      ),                      separatorBuilder: (context, index) => Container(                        height: 1,                        width: double.infinity,                        color: Colors.grey[200],                      ),                      itemCount: ShopCubit.get(context)                          .searchModels!                          .data!                          .data                          .length,                    )),                ],              ),            ),          );        },      ),    );  }  Widget searchBuilderItems(Product model, context) => Padding(        padding: const EdgeInsets.all(10.0),        child: Container(          height: 120,          child: Row(            mainAxisAlignment: MainAxisAlignment.start,            crossAxisAlignment: CrossAxisAlignment.start,            children: [              Container(                height: 120,                width: 120,                child: Stack(                  alignment: AlignmentDirectional.bottomStart,                  children: [                    Image(                      image: NetworkImage(                        '${model.image}',                      ),                      height: 200.0,                      width: double.infinity,                    ),                    if (model.discount != 0)                      Container(                        decoration: BoxDecoration(                          borderRadius: BorderRadius.circular(                            20.0,                          ),                          color: Colors.red,                        ),                        padding: EdgeInsets.symmetric(                          horizontal: 10.0,                        ),                        child: Text(                          'DISCOUNT',                          style: TextStyle(                            fontSize: 15.0,                            color: Colors.white,                          ),                        ),                      ),                  ],                ),              ),              SizedBox(                width: 15.0,              ),              Expanded(                child: Column(                  children: [                    Text(                      model.name.toString(),                      style: TextStyle(                        fontSize: 14.0,                        fontWeight: FontWeight.bold,                        height: 1.4,                      ),                      maxLines: 2,                      overflow: TextOverflow.ellipsis,                    ),                    SizedBox(                      height: 5.0,                    ),                    Spacer(),                    Row(                      children: [                        Text(                          model.price.toString(),                          style: TextStyle(                            color: Colors.blue,                            fontWeight: FontWeight.bold,                          ),                        ),                        if (model.discount != 0)                          Text(                            model.oldPrice.toString(),                            style: TextStyle(                              color: Colors.grey[400],                              fontWeight: FontWeight.bold,                              decoration: TextDecoration.lineThrough,                            ),                          ),                        Spacer(),                        IconButton(                          onPressed: () {                            ShopCubit.get(context)                                .changeFavorites(model.id!.toInt());                            print(model.id);                          },                          icon: CircleAvatar(                            backgroundColor:                                ShopCubit.get(context).favorites[model.id] ==                                        true                                    ? Colors.blue                                    : Colors.grey,                            radius: 15.0,                            child: Icon(                              Icons.favorite_border,                              color: Colors.white,                              size: 14.0,                            ),                          ),                        ),                      ],                    ),                  ],                ),              ),            ],          ),        ),      );}