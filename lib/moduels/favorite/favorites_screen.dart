import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:shop_app/models/favorites_models.dart';import 'package:shop_app/shared/cubit/cubit.dart';import 'package:shop_app/shared/cubit/state.dart';class FavoritesScreen extends StatelessWidget {  const FavoritesScreen({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    return BlocConsumer<ShopCubit, ShopStates>(      listener: (context, state) {},      builder: (context, state) {        return ListView.separated(          physics: BouncingScrollPhysics(),          itemBuilder: (context, index) => favoritesBuilderItems(            ShopCubit.get(context).favoritesModels!.data!.data[index],            context,          ),          separatorBuilder: (context, index) => Container(            height: 1,            width: double.infinity,            color: Colors.grey[200],          ),          itemCount: ShopCubit.get(context).favoritesModels!.data!.data.length,        );      },    );  }  Widget favoritesBuilderItems(FavoritesData model, context) => Padding(        padding: const EdgeInsets.all(10.0),        child: Container(          height: 120,          child: Row(            mainAxisAlignment: MainAxisAlignment.start,            crossAxisAlignment: CrossAxisAlignment.start,            children: [              Container(                height: 120,                width: 120,                child: Stack(                  alignment: AlignmentDirectional.bottomStart,                  children: [                    Image(                      image: NetworkImage(                        '${model.product!.image}',                      ),                      height: 200.0,                      width: double.infinity,                    ),                    if (model.product!.discount != 0)                      Container(                        decoration: BoxDecoration(                          borderRadius: BorderRadius.circular(                            20.0,                          ),                          color: Colors.red,                        ),                        padding: EdgeInsets.symmetric(                          horizontal: 10.0,                        ),                        child: Text(                          'DISCOUNT',                          style: TextStyle(                            fontSize: 15.0,                            color: Colors.white,                          ),                        ),                      ),                  ],                ),              ),              SizedBox(                width: 15.0,              ),              Expanded(                child: Column(                  children: [                    Text(                      model.product!.name.toString(),                      style: TextStyle(                        fontSize: 14.0,                        fontWeight: FontWeight.bold,                        height: 1.4,                      ),                      maxLines: 2,                      overflow: TextOverflow.ellipsis,                    ),                    SizedBox(                      height: 5.0,                    ),                    Spacer(),                    Row(                      children: [                        Text(                          model.product!.price.toString(),                          style: TextStyle(                            color: Colors.blue,                            fontWeight: FontWeight.bold,                          ),                        ),                        if (model.product!.discount != 0)                          Text(                            model.product!.oldPrice.toString(),                            style: TextStyle(                              color: Colors.grey[400],                              fontWeight: FontWeight.bold,                              decoration: TextDecoration.lineThrough,                            ),                          ),                        Spacer(),                        IconButton(                          onPressed: () {                            ShopCubit.get(context)                                .changeFavorites(model.product!.id!.toInt());                            print(model.id);                          },                          icon: CircleAvatar(                            backgroundColor: ShopCubit.get(context)                                        .favorites[model.product!.id] ==                                    true                                ? Colors.blue                                : Colors.grey,                            radius: 15.0,                            child: Icon(                              Icons.favorite_border,                              color: Colors.white,                              size: 14.0,                            ),                          ),                        ),                      ],                    ),                  ],                ),              ),            ],          ),        ),      );}