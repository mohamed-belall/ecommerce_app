import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:fluttertoast/fluttertoast.dart';import 'package:shop_app/layout/shop_app_layout.dart';import 'package:shop_app/moduels/register_screen/register_screen.dart';import 'package:shop_app/shared/constant.dart';import 'package:shop_app/shared/cubit/cubit.dart';import 'package:shop_app/shared/cubit/state.dart';import 'package:shop_app/shared/network/local/shared_prefercne.dart';import 'package:shop_app/shared/style/colors.dart';class ShopLoginScreen extends StatelessWidget {  var emailController = TextEditingController();  var passwordController = TextEditingController();  var formKay = GlobalKey<FormState>();  @override  Widget build(BuildContext context) {    return BlocProvider(      create: (context) => ShopCubit(),      child: BlocConsumer<ShopCubit, ShopStates>(        listener: (context, state) {          if (state is ShopLoginSuccessState) {            if (state.userLoginModel.status == true) {              print(state.userLoginModel.message);              print(state.userLoginModel.data!.token);              CasheHelper.putData(                      key: 'token', value: state.userLoginModel.data!.token)                  .then((value) {                token = state.userLoginModel.data!.token!;                Navigator.pushAndRemoveUntil(                  context,                  MaterialPageRoute(                      builder: (context) => ShopAppLayoutScreen()),                  (route) => false,                );                flutterToast(                  message: state.userLoginModel.message.toString(),                  state: ToastState.SUCCESS,                );              });            } else {              print(state.userLoginModel.message);              flutterToast(                message: state.userLoginModel.message.toString(),                state: ToastState.ERROR,              );            }          }        },        builder: (context, state) {          var cubit = ShopCubit.get(context);          return Scaffold(            appBar: AppBar(),            body: Center(              child: SingleChildScrollView(                child: Padding(                  padding: const EdgeInsets.all(20.0),                  child: Form(                    key: formKay,                    child: Column(                      crossAxisAlignment: CrossAxisAlignment.start,                      children: [                        Text(                          'Welcome Back ',                          style: TextStyle(                            fontSize: 30.0,                            fontWeight: FontWeight.bold,                            color: defaultColor,                          ),                        ),                        SizedBox(                          height: 10.0,                        ),                        Text(                          'Login Now To Browse Our Hot Offer ',                          style: TextStyle(                            fontSize: 20.0,                            color: Colors.grey,                          ),                        ),                        SizedBox(                          height: 20.0,                        ),                        TextFormField(                          keyboardType: TextInputType.emailAddress,                          controller: emailController,                          validator: (String? value) {                            if (value!.isEmpty) {                              return 'please enter you email';                            }                          },                          decoration: InputDecoration(                            prefixIcon: Icon(                              Icons.email_outlined,                            ),                            border: OutlineInputBorder(                              borderRadius: BorderRadius.circular(                                20.0,                              ),                            ),                            labelText: 'Email Address',                          ),                        ),                        SizedBox(                          height: 20.0,                        ),                        TextFormField(                          onFieldSubmitted: (value) {                            if (formKay.currentState!.validate()) {                              ShopCubit.get(context).userLogin(                                email: emailController.text,                                password: passwordController.text,                              );                            }                          },                          obscureText: cubit.obs,                          controller: passwordController,                          validator: (String? value) {                            if (value!.isEmpty) {                              return 'please enter you password';                            }                          },                          decoration: InputDecoration(                            prefixIcon: Icon(                              Icons.lock_outline,                            ),                            suffixIcon: IconButton(                              onPressed: () {                                cubit.changePasswordVisibility();                              },                              icon: Icon(                                cubit.suffixIcon,                              ),                            ),                            border: OutlineInputBorder(                              borderRadius: BorderRadius.circular(                                20.0,                              ),                            ),                            labelText: 'Password',                          ),                        ),                        SizedBox(                          height: 20.0,                        ),                        state is! ShopLoginLoadingState                            ? Container(                                width: double.infinity,                                height: 50.0,                                decoration: BoxDecoration(                                  color: Colors.blue,                                  borderRadius: BorderRadius.circular(                                    60.0,                                  ),                                ),                                child: MaterialButton(                                  onPressed: () {                                    if (formKay.currentState!.validate()) {                                      ShopCubit.get(context).userLogin(                                        email: emailController.text,                                        password: passwordController.text,                                      );                                    }                                  },                                  elevation: 20.0,                                  child: Text(                                    'LOGIN',                                    style: TextStyle(                                      fontSize: 20.0,                                      color: Colors.white,                                    ),                                  ),                                ),                              )                            : Center(child: CircularProgressIndicator()),                        SizedBox(                          height: 20.0,                        ),                        Row(                          mainAxisAlignment: MainAxisAlignment.center,                          children: [                            Text(                              'Don\'t have an account?',                              style: TextStyle(                                fontSize: 15.0,                                fontWeight: FontWeight.bold,                              ),                            ),                            TextButton(                              onPressed: () {                                Navigator.push(                                  context,                                  MaterialPageRoute(                                    builder: (context) => RegisterScreen(),                                  ),                                );                              },                              child: Text('REGISTER'),                            ),                          ],                        ),                      ],                    ),                  ),                ),              ),            ),          );        },      ),    );  }}void flutterToast({  required String message,  required ToastState state,}) =>    Fluttertoast.showToast(        msg: message,        toastLength: Toast.LENGTH_SHORT,        gravity: ToastGravity.BOTTOM,        timeInSecForIosWeb: 5,        backgroundColor: toastColor(state),        textColor: Colors.white,        fontSize: 16.0);enum ToastState { SUCCESS, WARMING, ERROR }Color toastColor(ToastState state) {  Color color;  switch (state) {    case ToastState.SUCCESS:      color = Colors.green;      break;    case ToastState.ERROR:      color = Colors.red;      break;    case ToastState.WARMING:      color = Colors.amber;      break;  }  return color;}