import 'package:carousel_slider/carousel_slider.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:shop_app/models/categories_models.dart';import 'package:shop_app/models/home_models.dart';import 'package:shop_app/shared/constant.dart';import 'package:shop_app/shared/cubit/cubit.dart';import 'package:shop_app/shared/cubit/state.dart';class ProductScreen extends StatelessWidget {  const ProductScreen({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    return BlocConsumer<ShopCubit, ShopStates>(      listener: (conext, state) {},      builder: (context, state) {        var cubit = ShopCubit.get(context);        return Scaffold(          body: cubit.homeModels != null && cubit.categoriesModel != null              ? homeBuilder(cubit.homeModels!, cubit.categoriesModel!, context)              : Center(                  child: CircularProgressIndicator(),                ),        );      },    );  }  Widget homeBuilder(          HomeModels models, CategoriesModel categoriesModel, context) =>      SingleChildScrollView(        physics: BouncingScrollPhysics(),        child: Column(          crossAxisAlignment: CrossAxisAlignment.start,          children: [            CarouselSlider(              items: models.data!.banner                  .map(                    (e) => Image(                      image: NetworkImage(                        '${e.image}',                      ),                      width: double.infinity,                      fit: BoxFit.cover,                    ),                  )                  .toList(),              options: CarouselOptions(                height: 250,                initialPage: 0,                enableInfiniteScroll: true,                scrollDirection: Axis.horizontal,                reverse: false,                autoPlayCurve: Curves.fastOutSlowIn,                viewportFraction: 1.0,                autoPlay: true,                autoPlayAnimationDuration: Duration(                  seconds: 3,                ),                autoPlayInterval: Duration(                  seconds: 5,                ),              ),            ),            SizedBox(              height: 10.0,            ),            Padding(              padding: const EdgeInsets.all(10.0),              child: Column(                crossAxisAlignment: CrossAxisAlignment.start,                children: [                  Text(                    'Categories',                    style: TextStyle(                      fontSize: 30.0,                      fontWeight: FontWeight.w800,                    ),                  ),                  Container(                      height: 100.0,                      child: ListView.separated(                        physics: BouncingScrollPhysics(),                        scrollDirection: Axis.horizontal,                        itemBuilder: (context, index) => categoriesBuilder(                            categoriesModel.data!.data[index]),                        separatorBuilder: (context, index) => SizedBox(                          width: 10.0,                        ),                        itemCount: categoriesModel.data!.data.length,                      )),                  SizedBox(                    height: 30.0,                  ),                  Text(                    'Products',                    style: TextStyle(                      fontSize: 30.0,                      fontWeight: FontWeight.w800,                    ),                  ),                ],              ),            ),            SizedBox(              height: 10.0,            ),            Container(              padding: EdgeInsets.all(10.0),              color: Colors.grey[300],              child: GridView.count(                shrinkWrap: true,                physics: NeverScrollableScrollPhysics(),                crossAxisCount: 2,                mainAxisSpacing: 10.0,                crossAxisSpacing: 10.0,                childAspectRatio: 1 / 1.8,                children: List.generate(                  models.data!.product.length,                  (index) => gridViewBuilder(                    models.data!.product[index],                    context,                  ),                ),              ),            ),          ],        ),      );  Widget gridViewBuilder(ProductModel model, context) => Container(        padding: EdgeInsets.symmetric(horizontal: 10.0),        decoration: BoxDecoration(          borderRadius: BorderRadius.circular(            20.0,          ),          color: Colors.white,        ),        child: Column(          mainAxisAlignment: MainAxisAlignment.start,          crossAxisAlignment: CrossAxisAlignment.start,          children: [            Stack(              alignment: AlignmentDirectional.bottomStart,              children: [                Padding(                  padding: const EdgeInsets.all(8.0),                  child: Image(                    image: NetworkImage(                      '${model.image}',                    ),                    height: 200.0,                    width: double.infinity,                  ),                ),                if (model.discount != 0)                  Container(                    decoration: BoxDecoration(                      borderRadius: BorderRadius.circular(                        20.0,                      ),                      color: Colors.red,                    ),                    padding: EdgeInsets.symmetric(                      horizontal: 10.0,                    ),                    child: Text(                      'DISCOUNT',                      style: TextStyle(                        fontSize: 15.0,                        color: Colors.white,                      ),                    ),                  ),              ],            ),            SizedBox(              height: 15.0,            ),            Text(              '${model.name}',              style: TextStyle(                fontSize: 14.0,                fontWeight: FontWeight.bold,                height: 1.4,              ),              maxLines: 2,              overflow: TextOverflow.ellipsis,            ),            Spacer(),            Row(              children: [                Text(                  '${model.price}    ',                  style: TextStyle(                    color: Colors.blue,                    fontWeight: FontWeight.bold,                  ),                ),                if (model.discount != 0)                  Text(                    '${model.oldPrice}',                    style: TextStyle(                      color: Colors.grey[400],                      fontWeight: FontWeight.bold,                      decoration: TextDecoration.lineThrough,                    ),                  ),                Spacer(),                IconButton(                  onPressed: () {                    ShopCubit.get(context).changeFavorites(model.id!.toInt());                    print(model.id);                    print(token);                  },                  icon: CircleAvatar(                    backgroundColor:                        ShopCubit.get(context).favorites[model.id] == true                            ? Colors.blue                            : Colors.grey,                    radius: 15.0,                    child: Icon(                      Icons.favorite_border,                      color: Colors.white,                      size: 14.0,                    ),                  ),                ),              ],            ),          ],        ),      );  Widget categoriesBuilder(DataModel model) => Container(        child: Stack(          alignment: AlignmentDirectional.bottomCenter,          children: [            Image(              image: NetworkImage(                model.image.toString(),              ),              height: 100.0,              width: 100.0,              fit: BoxFit.cover,            ),            Container(              color: Colors.black.withAlpha(160),              width: 100.0,              padding: EdgeInsets.symmetric(                vertical: 1.0,              ),              child: Text(                model.name.toString(),                textAlign: TextAlign.center,                maxLines: 1,                overflow: TextOverflow.ellipsis,                style: TextStyle(                  color: Colors.white,                  fontSize: 15.0,                ),              ),            ),          ],        ),      );}