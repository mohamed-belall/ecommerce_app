import 'package:flutter/animation.dart';import 'package:flutter/material.dart';import 'package:shop_app/moduels/shop_login_screen/shop_login_screen.dart';import 'package:shop_app/shared/network/local/shared_prefercne.dart';import 'package:shop_app/shared/style/colors.dart';import 'package:smooth_page_indicator/smooth_page_indicator.dart';class OnBoardingScreen extends StatefulWidget {  @override  _OnBoardingScreenState createState() => _OnBoardingScreenState();}class _OnBoardingScreenState extends State<OnBoardingScreen> {  var boardingController = PageController();  bool isLast = false;  void onSubmit() {    CasheHelper.putData(      key: 'onBoarding',      value: true,    ).then((value) {      if (value) {        Navigator.pushAndRemoveUntil(          context,          MaterialPageRoute(builder: (context) => ShopLoginScreen()),          (route) => false,        );      }    });  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        actions: [          TextButton(            onPressed: onSubmit,            //     () {            //   Navigator.pushAndRemoveUntil(            //     context,            //     MaterialPageRoute(builder: (context) => ShopLoginScreen()),            //     (route) => false,            //   );            // },            child: Text(              'SKIP',            ),          ),        ],      ),      body: Padding(        padding: const EdgeInsets.all(30.0),        child: Column(          children: [            Expanded(              child: PageView.builder(                controller: boardingController,                physics: BouncingScrollPhysics(),                onPageChanged: (int index) {                  if (index == onboardingScreens.length - 1) {                    setState(() {                      isLast = true;                    });                  } else {                    setState(() {                      isLast = false;                    });                  }                },                itemBuilder: (context, index) =>                    buildBoardingItem(onboardingScreens[index]),                itemCount: 3,              ),            ),            SizedBox(              height: 20.0,            ),            Row(              mainAxisAlignment: MainAxisAlignment.spaceBetween,              children: [                SmoothPageIndicator(                  controller: boardingController,                  count: onboardingScreens.length,                  effect: ExpandingDotsEffect(                    dotColor: Colors.grey,                    dotHeight: 10,                    dotWidth: 10.0,                    spacing: 10,                    activeDotColor: defaultColor,                  ),                ),                FloatingActionButton(                  onPressed: () {                    if (isLast == true) {                      onSubmit();                    } else {                      boardingController.nextPage(                        duration: Duration(                          milliseconds: 1500,                        ),                        curve: Curves.fastLinearToSlowEaseIn,                      );                    }                  },                  child: Icon(Icons.arrow_forward_ios),                ),              ],            ),            SizedBox(              height: 20.0,            ),          ],        ),      ),    );  }}Widget buildBoardingItem(OnBoardingModels models) => Column(      crossAxisAlignment: CrossAxisAlignment.start,      children: [        Expanded(          child: Image(            image: AssetImage(              '${models.image}',            ),          ),        ),        SizedBox(          height: 30.0,        ),        Text(          '${models.title}',          style: TextStyle(            fontSize: 34,          ),        ),        SizedBox(          height: 20.0,        ),        Text(          '${models.body}',          style: TextStyle(            fontSize: 14,          ),        ),        SizedBox(          height: 20.0,        ),      ],    );class OnBoardingModels {  String image;  String title;  String body;  OnBoardingModels({    required this.title,    required this.body,    required this.image,  });}List<OnBoardingModels> onboardingScreens = [  OnBoardingModels(    title: 'On Boarding 1 Title',    body: 'On Boarding 1 Body',    image: 'assets/images/onbording.jpg',  ),  OnBoardingModels(    title: 'On Boarding 2 Title',    body: 'On Boarding 2 Body',    image: 'assets/images/onbording.jpg',  ),  OnBoardingModels(    title: 'On Boarding 3 Title',    body: 'On Boarding 3 Body',    image: 'assets/images/onbording.jpg',  ),];